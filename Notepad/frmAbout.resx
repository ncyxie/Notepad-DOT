<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAYAAACtWK6eAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABP2SURBVHhe7Z0LkBXVmcflIaJg8ImgIFaJqCVUUZZi+Shr8f0ARMQ1oIkYkV2ybmRTKFnYFEh0
        Ld2sb7NgWSsKoqsCBuXhg4jyMiiCQSOIGoMomvBGBmEGe/vMPfdM9+1fz0wPp889M/P9rF8h93T3+e7X
        58887r3dBwiCIAiCIAiCIAiCIAiCIAiCIAiCLYIgODn0h9D6MFzvJghNm3Cxf1xY8w2mgz6UIDQdwoU9
        s7C+rdFCH1oQGjd6QefBQD2FIDQ+wgV8YGEd58oKPZ0gNB7ChXtQYf3WzpIlS4LOnTsHapeoLVq0CM4+
        +2y9VZ2sC/cRhMaDXripnHrqqYlQ1ObcuXP1nqnMCLcTBP/RCxaZPn06BqC+1sFh4TaC4C/hIl1fWKtJ
        +vTpg4s+q9u2bdNHTBKOC4KfhOsz9YdyW+EoWlFRoY+cYHU4Lgj+oRdogmeeeQYX+f6aRjgmCP6h12cC
        NZSHXbp00TMkeDgcFwR/CBflhMLajHPKKafg4rZlGuGYIPiDXpcJ1FCe9ujRQ88UJxwTBH/Q6zLG22+/
        nVjQeZhC73BMEPxAL8oYnTp1wgVt2xT+Ho4JQvkJF2PvwpqMo4ZcOG/ePD1jnHBMEMpPuBYHFpZkHDXk
        wptvvlnPGCccE4TyE67FoYUlGUcNuXDw4MF6xjjhmCCUn3AtXl5YknHUkAsnTpyoZ4wTjglC+QnX4omF
        JRlHvWVdDeft1q1b9YxxwjFB8AO9JmOce+65icWchyksCMcEwQ/0okyghvI2hePDMUHwA70oE6ihPH3w
        wQf1THHCMUHwh3BNnl9YmnEWLFiQWNQ2TSMcEwS/0GszgRrKQ/V59hROCseFZsLKUFwgvvnDD+kXSqTt
        98fjjjtOHzlJq1atcJ+M7gsVPOeeUDp53pqG+gQgbd9Q09izZw9uvx8KHkMnzGtvvfVWvVST2Fi8Xbt2
        1UdjaB8LCp5CJ8t7a/tWS9G9e3fcry7fe+89fQTG0rdWaQoeQieqUVgfzjjjDNy31KlTp+o90rn00ktx
        X8vK9YA9g05SozELS5curX5P1ejRo4NJkyYF27dv1yN1M3z4cJyfVG9/UV9p2rRpUy1tU4cSEo+gE9So
        zJvzzz8f502z+P6wli1b7s+3ZC1DBQ+gkxPzwAMPDC688MLgoosuKpuXX355cMkllwQDBgwI+vfvHwwd
        OjS4+uqrg2HDhgUjRowIKisr9XK2y5AhQ4Krrrqq+turK664IujXr19w5ZVXVv+paqFalarWiy++uHof
        9aeqvzh2zDHHYJ9BCYkH0IkxHnbYYXqpCDbp2LEj9huUkJQZOinGFStW6FMq2OaII47AnoPyM0kZoRNi
        XL16tT6dQh4ccsgh2HdQKBN0MoyNISD79u2rtqqqqvrvxT/VY4riayZ1vXZSLg499FDsPSiUAToRxrSA
        rPr2vaD/832Dfs//Q+5OXPzvetY4119/Pdach+ravwTVm+aazX/WeyU5/PDDcV5QcAydBCMFZO++vbgA
        8vKepeP1zHGo3jwlqN7aXPXt+3rPJOo6wDQvKDiEToCRArKp4u948vPyt+/cpWeOQ/XmKUH11uW7Xy/T
        eyfJcJ3h1qGCA6j5xrVr1+pTV4PrgDz47r165jhUb54SVG99XLZhkT5Ckvq+PSb0oFAhZ6jxRh8C8tiK
        +/XMcajePCWo3vq6ZMNb+ihJ1M1FqQbwkFAhR6jpRh8C8vjKR/XMcajePCWo3iwu/jI9JBne4tI+VMgJ
        arjRh4A89afH9cxxqN48JajerC7d8LY+WpILLrgAawEPDRVygJpt9CEgz370lJ45DtWbpwTV2xCXbVis
        j5gkQ0jahQqWoUYbP/vsM32aanAdkBlrntMz16Be9KN685Sgehvqki+tfCWRH9wtQ002fvHFF/oU1eA6
        IC+vm6lnrqEpBkT55l9f10dOot4VTHWBgkWowUYfAvLq56/omWtoqgFRzvn0JX30JOpt9lQbKFiCmmv0
        ISB/+OI1PXMNTTkgyhfXTNczJFG3YqD6QHkXsAWosUYfArL4y4V65hqaekCU0z+aomdJctNNN2GN4GGh
        wn5ATTX6EJDl8NYM9U5dqjdPCarXplNSfsWtGDlyJNYJdg4VGgg11Pj111/r01GD64Cs+jb5oa3m8BWk
        6BOrHtOzJRk1ahTWCsqV6BsINdPoQ0D+vCn5hsnm8hWk6OT3H9IzJrnjjjuwXrBHqJARaqTRh4B8uuUT
        PXMNe/fuxXrzlKB68/LR9/5bz5pk3LhxWDMoZISaaPQhIOu3J38OyuH6uLWqruxCUL15ev8f/1PPnERd
        84tqL1HICDXR6ENAvvkuWcPOnTux3rxs27atnjkO1Zu3aR8gU9x3331Yf0QhI9RE46ZNm3Tra3AdkM27
        kzVs2bIF683Ldu3a6ZnjUL0unLhorK4gjjpfVH9EISPURKMPAdm5Z6eeuYaNGzdivXn5ox/9SM8ch+p1
        JSEBsQ810ehDQPZU7dEz17Bu3TqsNy+PPPJIPXMcqteVhATEPtREow8BIT744AOsNy/V5UIJqteVRD2+
        sgoZoSYafQ3IwoULsd68TLsdG9XrSkICYh9qonHHjh269TX4EJA5c+ZgvXnZrVs3PXMcqteVhATEPtRE
        o68BmTZtGtablyeddJKeOQ7V60pCAmIfaqLR14A8/PDDWG9e9uzZU88ch+p1JSEBsQ810ehrQMaPH4/1
        5mXv3r31zHGoXlcS69evx/ojChmhJhp9DUiGt3pb8ayzztIzx6F6XUlIQOxDTTSq9zyV4kNArrvuOqw3
        L8877zw9cxyq15WEBMQ+1ESjrwFRtzKjevOyb9++euY4VK8rCQmIfaiJRl8D0qdPH6w3L1UgCarXlYQE
        xD7URKOvAenVqxfWm5eXXXaZnjkO1etKQl3HjOqPKGSEmmj0NSDdu3fHevNy0KBBeuY4VK8rCQmIfaiJ
        RvXZ71J8CIh6ZZvqzUt1NyuC6nUlIQGxDzXRSPgQkM6dO2O9eanuxU5Qva4kJCD2oSYaCR8CkuE+41a8
        7bbb9MxxqF5XEhIQ+1ATjYQPAVGfz6B681JdOYSgel1JfPLJJ1h/RCEj1EQj4UNAOnTogPXm5YQJE/TM
        caheVxLqdhVUf0QhI9REI+FDQNq3b4/15qW6GAJB9bqSkIDYh5poJHwIiLrKCNWbl489xlc3pHpdSUhA
        7ENNNBI+BKR169ZYb15OmcIXkqZ6XUlIQOxDTTQSzTEgM2bM0DPHoXpdSaxZswbrjyhkhJpoJHwISKtW
        rbDevHztteQ9ShRUryuJDz/8EOuPKGSEmmgkmmNAli5dqmeOQ/W6kpCA2IeaaCR8CEjLli2x3rxUC4+g
        el1JSEDsQ000Es0xIOoVaoLqdSUhAbEPNdFI+BCQFi1aYL15+dVXX+mZa6iorMB6XUlIQOxDTTQSzTEg
        dAG9zbs3Y72uJFauXIn1RxQyQk00Es0xINu2bdMz17Bhx5dYrysJCYh9qIlGojkGZNeuXXrmGj7dshbr
        dSUhAbEPNdFI+BAQqjVPv//+ez1zDav/tgrrdSUhAbEPNdFINMeAqHsilqJuT031upKQgNiHmmgkmmNA
        qqqq9Mw1vLV+AdbrSmL58uVYf0QhI9REI9EcA0KfzX/181ewXlcSEhD7UBONRHMMCPHS2hewXlcSEhD7
        UBONhASkwLMfPYX1upKQgNiHmmgkJCAF/veD/8F6XUlIQOxDTTQSEpACv1txP9brSmLJkiVYf0QhI9RE
        IyEBKfDbP96N9bqSkIDYh5poJCQgBe5a/B9YrysJCYh9qIlGQgJSYOzCf8N6XUlIQOxDTTQSEpACv3zj
        n7FeVxISEPtQE42EBKTAyPk3Yr2uJBYtWoT1RxQyQk00EhKQAv807ydYryuJhQsXYv0RhYxQE42EBKTA
        iLk3YL2uJCQg9qEmGgkJSIHhc4Ziva4kJCD2oSYaCQlIgZ+98mOs15WEBMQ+1EQjIQEpMOyVf8R6XUlI
        QOxDTTQSEpACP315MNbrSuKNN97A+iMKGaEmGgkJSIEbZg/Cel1JSEDsQ000EhKQAtf/fiDW60pCAmIf
        aqKRkIAUGPLSAKzXlYQExD7URCPhMiCDZlyiZ41DteYpcd2sflizKwkJiH2oiUbCZUDUIiSo1jwlrp15
        BdbsSmLevHlYf0QhI9REI+EyID8JfxAmqNY8Ja6ZcRnW7EpCAmIfaqKRcBmQm+f8WM8ah2rNU+LqFy/B
        ml1JSEDsQ000Ei4DMnL+T/WscajWPCUGvngR1uxKQgJiH2qikXAZkF+8NlzPGodqzVNiwAsXYM2uJCQg
        9qEmGgmXARm94F/0rHGo1jwlqF6XErNnz8b6IwoZoSYaCZcBUR9rJajWPCWoXpcSEhD7UBONhMuATHh7
        jJ41DtWapwTV61JCAmIfaqKRcBmQu5f8Ws9ag7pOLtWapwTV61JCAmIfaqKRcBmQ/3rnN3rWOC5v4qlu
        OU1QvS4lJCD2oSYaCZcBefDde/WsSdQNK9UN/pctWxZMmzYtmDt3bvDII48ETz75ZHDvvfcGd955ZzBx
        4sRg+PDhwZgxY4JBgwYFt9xyS9C3b9/g2muvDc4888zq/+/du3fQq1evoGfPnsGJJ54Y9OjRIzj22GOD
        rl27Bscff7yeLQnV61JixowZeB4jChmhJhoJlwH53YoH9Kz+QfW6lJCA2IeaaCRcBuSJVY/pWf2D6nUp
        IQGxDzXRSLgMyNOrn9Cz+gfV61JCAmIfaqKRcBmQZz96Ws/qH1SvSwkJiH2oiUbCZUAeX/monpVp165d
        cPDBBwetW7cODjrooKBNmzZB27Ztqx9Tf+/QoUP134866qigffv2QadOnYKOHTsGXbp0CU4++eSgW7du
        wTnnnBOcdtppQb9+/YJhw4YFI0eODGbNmhVs2bJFz8JQvS4lnnvuOTyPEYWMUBONhMuAKNM44YQTsGab
        VlRU6NniqNdiqFaXElOnTsXnEVHICDXRSLgOyKy1/6dnjrO3ci/WbNM0+r/QF2t1KSEBsQ810Ui4Dogy
        DfWtFdVtw7vvvlvPEueb777GGl1LSEDsQ000EuUIyJQ/Tdazx9m6bSvWbcM0qL5ySEhA7ENNNBLlCIgy
        jTzedvL00/zbs3e+WoK1lUNCAmIfaqKRKFdAHlh+j64gzrp167D2/TENqqtcEpMnT8bnE1HICDXRSJQr
        IMo0WrRogfU3xPnz5+ujxlEvWlJN5ZKQgNiHmmgkyhmQsW/yB6gWLFiA9TfENKieckpIQOxDTTQS5QyI
        Mg2qP6tr167VR4vzm8VjsZZySkhA7ENNNBLlDoi69RlRj89C1GkaVEe5JSQg9qEmGolyB0SZBj2H+rpx
        40Z9lDi3vX4L1lBuiQceeACfW0QhI9REI+FDQG58ebCuJk49fs2Jql8Vp0Hz+yAhAbEPNdFI+BAQZRr0
        POpy165deu84N8y+Guf2QUICYh9qopHwJSBp1+2dNGkSPpc01bt9ie+rvsd5fZGQgNiHmmgkfAmIMg16
        LmlWVlbqveIMnlnei1PXJSEBsQ810Uj4FJC02yOoCzbQ8yn16KOP1nvE2bJ7c2Iu4q/b/xIM/f1ViW2L
        /nz+ML1lDbsrd8e2uXnOED1SO9F9lMRdd92FzzOikBFqopHwKSDKH8L/CHo+pVZVVemt41z1woWJeWpj
        V+WuxPbzPputR5niDXgkIH5DTTQSvgUk7S5UI0aMwOdUVF3mh/hs6zqcJ8rnWz8NKvfFvzVb9e0Ks+01
        My7VjxaoCrdV+5Sitv3ZK9cFFZUVxijRx4vHLkpIQOxDTTQSvgVE2ZCvImnQ8ZVRio8NnzNUP1KAtlVB
        Kj5eOnbrqzfFxkrHS8eiEhIQ+1ATjYSPAVGf8CPSfhYZOHCg3iLOa5/PweMro9T1eBT11SS6/eIvF+qR
        INj43VexMWWU0rGohATEPtREI+FjQJRp1Pd5Kei4RaOkPT5h0Zhat1X+6s1f6JGg+itf6XiU0rGoxLhx
        4/D5RhQyQk00Er4GRN3xiZg5c2bsOY0fP16PxJm88mE8btEoaY+PW/jLWrdVjvnDv+qRINj3w77EeJTS
        sajE2LFjY88VFDJCTTQSvgZEmcbtt99e/XxOP/10/UgSOl7UKHU9HqX0W6ylG97SI0GwYcf62JgySulY
        VEICYh9qopHwOSDq17MN4c5Fv8LjRY1SfGz0gp/rRwrQtrur4q97RBkx94bYWOl46VhUQgJiH2qikfA5
        IMrSX7/WBf0cQEaZtfb5xDzvf7PcbFv6q+fdlRXV+5QSPX7RKDRelJCA2IeaaCR8D0j/5/k3Wmmoz5fQ
        cUqtjQp4ofD1v8zVo8yQlwYk9lFGofGihLrNA53HiEJGqIlGwveAKF/4eLqutnb27tuL+5PEjj3bq18J
        p+2VI+ffqLesoa45o9B4UWLUqFF4HiMKGaEmGonGEBDlhPDnitrYuWcH7tdYJCQg9qEmGonGEpCi6nJB
        leG/2kV27d0V/Pqt0bhtY5KQgNiHmmgkGltAmqqEBMQ+1EQjIQHxQ0ICYh9qopHYXLEJT5joVqKudzCH
        ChmhJhrToBMmupWQgNiHmmisjdV/WxV88O1K0bEfb/pQn4EkEhD7UBONQuNCAmIfaqJRaFxIQOxDTTQK
        jYtrrrkGz2NEISPURONDDz2kWy80BugclihkhJooNl2FjFATxaarkBFqoth0FTJCTRSbrkJGqIli01XI
        CDVRbLoKGZkSSo0Um55PhQoNYHMoNVRsOqpzLAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiCIAiC
        IAiCIAiCIAiCUDYOOOD/ASuNbB7ue49kAAAAAElFTkSuQmCC
</value>
  </data>
</root>